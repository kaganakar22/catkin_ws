// Generated by gencpp from file beginner_tutorials/Multiply.msg
// DO NOT EDIT!


#ifndef BEGINNER_TUTORIALS_MESSAGE_MULTIPLY_H
#define BEGINNER_TUTORIALS_MESSAGE_MULTIPLY_H

#include <ros/service_traits.h>


#include <beginner_tutorials/MultiplyRequest.h>
#include <beginner_tutorials/MultiplyResponse.h>


namespace beginner_tutorials
{

struct Multiply
{

typedef MultiplyRequest Request;
typedef MultiplyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Multiply
} // namespace beginner_tutorials


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::beginner_tutorials::Multiply > {
  static const char* value()
  {
    return "51d0ada50d2055f1c9c8992c5c64d6e1";
  }

  static const char* value(const ::beginner_tutorials::Multiply&) { return value(); }
};

template<>
struct DataType< ::beginner_tutorials::Multiply > {
  static const char* value()
  {
    return "beginner_tutorials/Multiply";
  }

  static const char* value(const ::beginner_tutorials::Multiply&) { return value(); }
};


// service_traits::MD5Sum< ::beginner_tutorials::MultiplyRequest> should match 
// service_traits::MD5Sum< ::beginner_tutorials::Multiply > 
template<>
struct MD5Sum< ::beginner_tutorials::MultiplyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::beginner_tutorials::Multiply >::value();
  }
  static const char* value(const ::beginner_tutorials::MultiplyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::beginner_tutorials::MultiplyRequest> should match 
// service_traits::DataType< ::beginner_tutorials::Multiply > 
template<>
struct DataType< ::beginner_tutorials::MultiplyRequest>
{
  static const char* value()
  {
    return DataType< ::beginner_tutorials::Multiply >::value();
  }
  static const char* value(const ::beginner_tutorials::MultiplyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::beginner_tutorials::MultiplyResponse> should match 
// service_traits::MD5Sum< ::beginner_tutorials::Multiply > 
template<>
struct MD5Sum< ::beginner_tutorials::MultiplyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::beginner_tutorials::Multiply >::value();
  }
  static const char* value(const ::beginner_tutorials::MultiplyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::beginner_tutorials::MultiplyResponse> should match 
// service_traits::DataType< ::beginner_tutorials::Multiply > 
template<>
struct DataType< ::beginner_tutorials::MultiplyResponse>
{
  static const char* value()
  {
    return DataType< ::beginner_tutorials::Multiply >::value();
  }
  static const char* value(const ::beginner_tutorials::MultiplyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BEGINNER_TUTORIALS_MESSAGE_MULTIPLY_H
